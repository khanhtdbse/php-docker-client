<?php
/**
 * Created by PhpStorm.
 * User: tran.duy.khanh
 * Date: 01/06/2017
 * Time: 07:56
 */

require __DIR__.'/../vendor/autoload.php';

use DockerClient\Container;
use DockerClient\ContainerConfig;
use DockerClient\Entities\ContainerEntity;
use DockerClient\Entities\ImageEntity;
use DockerClient\Image;
use DockerClient\ImageConfig;
use PHPUnit\Framework\TestCase;

class ContainerTest extends TestCase
{
    private $testContainerName;
    private $testImageName;

    public function setUp()
    {
        $this->testContainerName = rand(1, 10000000);
        $this->testImageName = "img" . rand(1, 10000000);
        parent::setUp(); // TODO: Change the autogenerated stub
    }

    public function testCreateContainerWithExistImage()
    {
        $containerConfig = new ContainerConfig($this->testContainerName, [
            'Image' => 'nginx'
        ]);
        $container = new Container();
        $container->create($containerConfig);
        // Start
        $container->start();

        $this->assertTrue(true);
    }

    public function testCreateContainerWithNewImage()
    {
        $this->setUp();
        $image = new Image();
        $imageConfig = new ImageConfig('compressWithDockerfile.tar.bz2', [
            't' => $this->testImageName,
        ]);
        $image->build($imageConfig);

        $container = new Container();

        $containerConfig = new ContainerConfig(
            $containerName = $this->testContainerName,
            $configs = [
                'Image' => $image->getEntity()
            ]
        );
        $container->create($containerConfig);
        $container->start();

        $image->getEntity()->rm();

        $this->assertTrue(true);
    }

    public function tearDown()
    {
        $containerEntity = new ContainerEntity($this->testContainerName);
        $containerEntity->stop();
        $containerEntity->rm();
    }
}